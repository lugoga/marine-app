shiny::runApp('coastal_dashboard')
runApp('coastal_dashboard')
runApp('coastal_dashboard')
channels == input$channel)
channels %>%   filter(channels == input$channel)
channels %>%   filter(channels == channel.name[1])
require(shiny)
require(tidyverse)
require(tsibble)
require(tmap)
require(sf)
require(DT)
set.seed(124)
## basemap
africa = st_read("d:/semba/shapefile/africa.shp", quiet = TRUE)
pemba.sf = africa %>%
st_crop(xmin = 38, xmax = 41, ymin = -8, ymax = -2)
## color codes
mycolor2 = c("#040ED8", "#2050FF", "#4196FF", "#6DC1FF", "#86D9FF", "#9CEEFF", "#AFF5FF", "#CEFFFF", "#FFFE47", "#FFEB00", "#FFC400", "#FF9000", "#FF4800", "#FF0000", "#D50000", "#9E0000")
## Sea level data processing
sea.level = read_table2("d:/semba/marcosouth/coastal_dashboard/data/zanzibar_monthly.txt", col_names = F)
sea.level = sea.level%>%
separate(col = 1, into = c("date.d", "a"), sep = ";")%>%
separate(col = 3, into = c("level_mm", "a"), sep = ";")  %>%
mutate(date = as.numeric(date.d),
date = lubridate::date_decimal(date) %>% lubridate::as_date(),
level_mm = as.numeric(level_mm))%>%
select(date.d,date, level_mm)
## Tuna EEZ Data
tunas = read_csv("d:/semba/marcosouth/coastal_dashboard/data/tuna_clean_teez_sst_chl_pp_u_v_xwind_ywind_sla.csv") %>%
mutate(category_name = str_remove_all(string = category_name, pattern = "Tuna"),
date = lubridate::mdy(fishing_date),
month = lubridate::month(date, label = TRUE, abbr = TRUE),
season = lubridate::month(date), season = if_else(season %in% c(5:9), true = "SE", false = "NE"),
weight = na_if(x = weight, y = 0))
flag = tunas %>% distinct(flag_state) %>% pull()
species = tunas %>% distinct(category_name) %>% pull()
gear = tunas %>% distinct(gear) %>% pull()
years = tunas %>% distinct(year) %>% pull()
n  = nrow(tunas)
## ringnet fishery
ringnet = read_csv("d:/semba/marcosouth/coastal_dashboard/data/ringnet_cpue_all.csv") %>%
filter(between(lon,38, 42), between(lat, -13, -4))
ring.sf = ringnet %>% drop_na(lon)  %>% st_as_sf(coords = c("lon", "lat"), crs = 4326)
# ringnet %>% glimpse()
fish.groups = ringnet %>% distinct(Groups) %>% pull()
## upwelling phenomenon in Tanga
upwelling = read_csv("d:/semba/marcosouth/coastal_dashboard/data/upwelling_events.csv")
## Chumbe Temperature
sst.chumbe = read_csv("d:/semba/marcosouth/coastal_dashboard/data/Chumbe_Temperature 1997-30Nov2017.csv")
sst.chumbe.long = sst.chumbe %>%
pivot_longer(cols = 2:23, values_to = "sst", names_to = "year") %>%
unite(1:2, col = "time", sep = "-", remove = TRUE) %>%
mutate(date = lubridate::dmy(time)) %>%
arrange(date)
index = which(is.na(sst.chumbe.long$date))
sst.chumbe.long = sst.chumbe.long %>%
slice(-index) %>%
mutate(doy = lubridate::yday(date),  year = lubridate::year(date)) %>%
relocate(sst, .after = year)
## MSP data
## data
channels = st_read("d:/semba/marcosouth/coastal_dashboard/data/channels.shp", quiet = TRUE) %>%
st_set_crs(4326)
channel.name = channels %>% distinct(channels) %>% pull()
landing.sites = st_read("d:/semba/Projects/MASTER/tansea/tza_zan_fish_landing_sites_10k.shp", quiet = TRUE)
iba = st_read("d:/semba/Projects/MASTER/tansea/tza_important_bird_areas_.shp", quiet = TRUE)
coelacanth = st_read("d:/semba/Projects/MASTER/tansea/tza_coelacanth_200k.shp", quiet = TRUE)
dolphin = st_read("d:/semba/Projects/MASTER/tansea/tza_dolphin_sites_200k.shp", quiet = TRUE)
dugong = st_read("d:/semba/Projects/MASTER/tansea/tza_dugong_sightings_200k.shp", quiet = TRUE)
prawn.culture = st_read("d:/semba/Projects/MASTER/tansea/tza_fish_prawn_culture_10k.shp", quiet = TRUE)
ports = st_read("d:/semba/Projects/MASTER/tansea/tza_harbours_and_ports.shp", quiet = TRUE)
mpa = st_read("d:/semba/Projects/MASTER/tansea/tza_marine_protected_areas_xx.shp", quiet = TRUE)
coastal_features = st_read("d:/semba/vpo/data/shp/coastal_land_cover.shp", quiet = TRUE) %>%
janitor::clean_names()
coastal.only = coastal_features %>%
filter(class %in% c("Mangrove", "Salt marsh", "Tidal reef", "Salt pan", "Saline bare area", "Sand", "Seagrass", "Swamp") )
tmap_options(check.and.fix = TRUE)
channels %>% filter(channels == channel.name[1])
channels %>% filter(channels == channel.name[1]) %>% st_centroid()
channels %>% filter(channels == channel.name[1]) %>% st_centroid() %>% st_coordinates()
channels %>% filter(channels == channel.name[1]) %>% st_centroid() %>% st_coordinates() %>% as_tibble()
coords = channels %>% filter(channels == channel.name[1]) %>% st_centroid() %>% st_coordinates() %>% as_tibble()
coords[1]
coords$X[1]
runApp('coastal_dashboard')
runApp('coastal_dashboard')
ring.sf
ring.sf %>% glimpse()
ring.sf %>% group_by(Groups) %>% count()
ring.sf %>% group_by(Groups) %>% count() %>% ungroup() %>% st_drop_geometry()
require(plotly)
ring.sf %>% group_by(Groups) %>% count() %>% ungroup() %>% st_drop_geometry() %>% plot_ly(type = "pie", name = ~Group, values = ~count)
ring.sf %>% group_by(Groups) %>% count() %>% ungroup() %>% st_drop_geometry() %>% plot_ly(type = "pie", name = ~Groups, values = ~count)
ring.sf %>% group_by(Groups) %>% count() %>% ungroup() %>% st_drop_geometry() %>% plot_ly(type = "pie", name = ~Groups, values = ~count)
ring.sf %>% group_by(Groups) %>% count() %>% ungroup() %>% st_drop_geometry() %>% as_tibble() %>% plot_ly(type = "pie", name = ~Groups, values = ~count)
ring.sf %>% group_by(Groups) %>% count() %>% ungroup() %>% st_drop_geometry() %>% as_tibble() %>% plot_ly(type = "pie", name = ~Groups, values = ~n)
ring.sf %>% group_by(Groups) %>% count() %>% ungroup() %>% st_drop_geometry() %>% as_tibble()
ring.sf %>% group_by(Groups) %>% summarise(n = n()) %>% ungroup() %>% st_drop_geometry() %>% as_tibble() %>% plot_ly(type = "pie", name = ~Groups, values = ~n)
ring.sf %>% group_by(Groups) %>% summarise(count = n()) %>% ungroup() %>% st_drop_geometry() %>% as_tibble() %>% plot_ly(type = "pie", name = ~Groups, values = ~count)
ring.sf %>% group_by(Groups) %>% summarise(count = n()) %>% ungroup() %>% st_drop_geometry() %>% as_tibble() %>% plot_ly(type = "pie", name = ~Groups, values = ~count, hole = .6)
ring.sf %>% group_by(Groups) %>% summarise(count = n()) %>% ungroup() %>% st_drop_geometry() %>% as_tibble() %>% plot_ly(type = "pie", labels = ~Groups, values = ~count, hole = .6)
ring.sf %>% group_by(Groups) %>% summarise(count = n()) %>% ungroup() %>% st_drop_geometry() %>% as_tibble() %>% plot_ly(type = "pie", labels = ~Groups, values = ~count, hole = .6,
textinfo='label+percent',
insidetextorientation='radial') %>%
layout(title = "Species Composition at Mafia Island",
showlegend = F,
xaxis = list(showgrid = FALSE, zeroline = FALSE,
showticklabels = FALSE),
yaxis = list(showgrid = FALSE,
zeroline = FALSE, showticklabels = FALSE))
ring.sf %>%
group_by(Groups) %>%
summarise(count = n()) %>%
ungroup() %>% st_drop_geometry() %>%
as_tibble() %>%
plot_ly(type = "pie", labels = ~Groups, values = ~count, hole = .6,
textinfo='label+percent',
insidetextorientation='radial') %>%
layout(title = "Species Composition at Mafia Island",
showlegend = F,
xaxis = list(showgrid = FALSE, zeroline = FALSE,
showticklabels = FALSE),
yaxis = list(showgrid = FALSE,
zeroline = FALSE, showticklabels = FALSE))
ring.sf %>%
group_by(Groups) %>%
summarise(count = n()) %>%
ungroup() %>%
st_drop_geometry()
ring.sf
ring.sf%>%
st_drop_geometry()
ring.sf%>%
st_drop_geometry()  %>%
group_by(Groups, season) %>%
summarise(count = n()) %>%
ungroup() %>%
as_tibble() %>%
plot_ly(type = "pie", labels = ~Groups, values = ~count, hole = .6,
textinfo='label+percent',
insidetextorientation='radial') %>%
layout(title = "Species Composition at Mafia Island",
showlegend = F,
xaxis = list(showgrid = FALSE, zeroline = FALSE,
showticklabels = FALSE),
yaxis = list(showgrid = FALSE,
zeroline = FALSE, showticklabels = FALSE))
ring.sf%>%
st_drop_geometry()  %>%
group_by(Groups, season) %>%
summarise(count = n()) %>%
ungroup() %>%
as_tibble() %>%
plot_ly(type = "pie", labels = ~Groups, values = ~count, group = ~season, hole = .6,
textinfo='label+percent',
insidetextorientation='radial') %>%
layout(title = "Species Composition at Mafia Island",
showlegend = F,
xaxis = list(showgrid = FALSE, zeroline = FALSE,
showticklabels = FALSE),
yaxis = list(showgrid = FALSE,
zeroline = FALSE, showticklabels = FALSE))
ring.sf%>%
st_drop_geometry()  %>%
group_by(Groups, season) %>%
summarise(count = n()) %>%
ungroup() %>%
as_tibble() %>%
plot_ly(type = "pie", labels = ~Groups, values = ~count, split = ~season, hole = .6,
textinfo='label+percent',
insidetextorientation='radial') %>%
layout(title = "Species Composition at Mafia Island",
showlegend = F,
xaxis = list(showgrid = FALSE, zeroline = FALSE,
showticklabels = FALSE),
yaxis = list(showgrid = FALSE,
zeroline = FALSE, showticklabels = FALSE))
ring.sf%>%
st_drop_geometry()  %>%
group_by(Groups, season) %>%
summarise(count = n()) %>%
ungroup() %>%
as_tibble() %>%
plot_ly(type = "pie", labels = ~Groups, values = ~count, group_by = ~season, hole = .6,
textinfo='label+percent',
insidetextorientation='radial') %>%
layout(title = "Species Composition at Mafia Island",
showlegend = F,
xaxis = list(showgrid = FALSE, zeroline = FALSE,
showticklabels = FALSE),
yaxis = list(showgrid = FALSE,
zeroline = FALSE, showticklabels = FALSE))
require(plotly)
runApp('coastal_dashboard')
ring.sf
runApp('coastal_dashboard')
ring.sf %>%
filter(season == input$season1) %>%
st_join(channels %>%
filter(channels == input$channel), join = st_within) %>%
filter(!is.na(channels))
runApp('coastal_dashboard')
runApp('coastal_dashboard')
shiny::runApp('coastal_dashboard')
runApp('coastal_dashboard')
runApp('coastal_dashboard')
## basemap
africa = st_read("d:/semba/shapefile/africa.shp", quiet = TRUE)
africa
require(shiny)
require(tidyverse)
require(tsibble)
require(tmap)
require(sf)
require(DT)
require(plotly)
set.seed(124)
## basemap
africa = st_read("d:/semba/shapefile/africa.shp", quiet = TRUE)
pemba.sf = africa %>%
st_crop(xmin = 38, xmax = 41, ymin = -8, ymax = -2)
## color codes
mycolor2 = c("#040ED8", "#2050FF", "#4196FF", "#6DC1FF", "#86D9FF", "#9CEEFF", "#AFF5FF", "#CEFFFF", "#FFFE47", "#FFEB00", "#FFC400", "#FF9000", "#FF4800", "#FF0000", "#D50000", "#9E0000")
## Sea level data processing
sea.level = read_table2("d:/semba/marcosouth/coastal_dashboard/data/zanzibar_monthly.txt", col_names = F)
sea.level = sea.level%>%
separate(col = 1, into = c("date.d", "a"), sep = ";")%>%
separate(col = 3, into = c("level_mm", "a"), sep = ";")  %>%
mutate(date = as.numeric(date.d),
date = lubridate::date_decimal(date) %>% lubridate::as_date(),
level_mm = as.numeric(level_mm))%>%
select(date.d,date, level_mm)
## Tuna EEZ Data
tunas = read_csv("d:/semba/marcosouth/coastal_dashboard/data/tuna_clean_teez_sst_chl_pp_u_v_xwind_ywind_sla.csv") %>%
mutate(category_name = str_remove_all(string = category_name, pattern = "Tuna"),
date = lubridate::mdy(fishing_date),
month = lubridate::month(date, label = TRUE, abbr = TRUE),
season = lubridate::month(date), season = if_else(season %in% c(5:9), true = "SE", false = "NE"),
weight = na_if(x = weight, y = 0))
flag = tunas %>% distinct(flag_state) %>% pull()
species = tunas %>% distinct(category_name) %>% pull()
gear = tunas %>% distinct(gear) %>% pull()
years = tunas %>% distinct(year) %>% pull()
n  = nrow(tunas)
## ringnet fishery
ringnet = read_csv("d:/semba/marcosouth/coastal_dashboard/data/ringnet_cpue_all.csv") %>%
filter(between(lon,38, 42), between(lat, -13, -4))
ring.sf = ringnet %>% drop_na(lon)  %>% st_as_sf(coords = c("lon", "lat"), crs = 4326)
# ringnet %>% glimpse()
fish.groups = ringnet %>% distinct(Groups) %>% pull()
## upwelling phenomenon in Tanga
upwelling = read_csv("d:/semba/marcosouth/coastal_dashboard/data/upwelling_events.csv")
## Chumbe Temperature
sst.chumbe = read_csv("d:/semba/marcosouth/coastal_dashboard/data/Chumbe_Temperature 1997-30Nov2017.csv")
sst.chumbe.long = sst.chumbe %>%
pivot_longer(cols = 2:23, values_to = "sst", names_to = "year") %>%
unite(1:2, col = "time", sep = "-", remove = TRUE) %>%
mutate(date = lubridate::dmy(time)) %>%
arrange(date)
index = which(is.na(sst.chumbe.long$date))
sst.chumbe.long = sst.chumbe.long %>%
slice(-index) %>%
mutate(doy = lubridate::yday(date),  year = lubridate::year(date)) %>%
relocate(sst, .after = year)
## MSP data
## data
channels = st_read("d:/semba/marcosouth/coastal_dashboard/data/channels.shp", quiet = TRUE) %>%
st_set_crs(4326)
channel.name = channels %>% distinct(channels) %>% pull()
landing.sites = st_read("d:/semba/Projects/MASTER/tansea/tza_zan_fish_landing_sites_10k.shp", quiet = TRUE)
iba = st_read("d:/semba/Projects/MASTER/tansea/tza_important_bird_areas_.shp", quiet = TRUE)
coelacanth = st_read("d:/semba/Projects/MASTER/tansea/tza_coelacanth_200k.shp", quiet = TRUE)
dolphin = st_read("d:/semba/Projects/MASTER/tansea/tza_dolphin_sites_200k.shp", quiet = TRUE)
dugong = st_read("d:/semba/Projects/MASTER/tansea/tza_dugong_sightings_200k.shp", quiet = TRUE)
prawn.culture = st_read("d:/semba/Projects/MASTER/tansea/tza_fish_prawn_culture_10k.shp", quiet = TRUE)
ports = st_read("d:/semba/Projects/MASTER/tansea/tza_harbours_and_ports.shp", quiet = TRUE)
mpa = st_read("d:/semba/Projects/MASTER/tansea/tza_marine_protected_areas_xx.shp", quiet = TRUE)
coastal_features = st_read("d:/semba/vpo/data/shp/coastal_land_cover.shp", quiet = TRUE) %>%
janitor::clean_names()
ringnet
ringnet %>% write_csv("coastal_dashboard/data/ringnet_cpue_all.csv")
upwelling %>% write_csv("coastal_dashboard/data/upwelling_events.csv")
sst.chumbe %>% write_csv("coastal_dashboard/data/sst_chumbe.csv")
## upwelling phenomenon in Tanga
upwelling = read_csv("coastal_dashboard/data/upwelling_events.csv")
## ringnet fishery
ringnet = read_csv("coastal_dashboard/data/ringnet_cpue_all.csv") %>%
filter(between(lon,38, 42), between(lat, -13, -4))
## Chumbe Temperature
sst.chumbe = read_csv("coastal_dashboard/data/sst_chumbe.csv")
sst.chumbe.long = sst.chumbe %>%
pivot_longer(cols = 2:23, values_to = "sst", names_to = "year") %>%
unite(1:2, col = "time", sep = "-", remove = TRUE) %>%
mutate(date = lubridate::dmy(time)) %>%
arrange(date)
channels
channels %>% st_write("coastal_dashboard/data/channels.shp")
channels = st_read("coastal_dashboard/data/channels.shp", quiet = TRUE)
channels
channel.name = channels %>% distinct(channels) %>% pull()
channel.name
channel.name
landing.sites
landing.sites %>% st_write("coastal_dashboard/data/fish_landing_sites.shp")
landing.sites = st_read("coastal_dashboard/data/fish_landing_sites.shp", quiet = TRUE)
landing.sites
iba
iba %>% st_write("coastal_dashboard/data/iba.shp")
iba = st_read("coastal_dashboard/data/iba.shp", quiet = TRUE)
coelacanth
coelacanth %>% st_write("coastal_dashboard/data/coelacanth.shp")
dolphin %>% st_write("coastal_dashboard/data/dolphin.shp")
dolphin = st_read("coastal_dashboard/data/dolphin.shp", quiet = TRUE)
dugong %>% st_write("coastal_dashboard/data/dugong.shp")
prawn.culture %>% st_write("coastal_dashboard/data/prawn_culture.shp")
ports %>% st_write("coastal_dashboard/data/ports.shp")
ports =  st_read("coastal_dashboard/data/ports.shp", quiet = TRUE)
prawn.culture =  st_read("coastal_dashboard/data/prawn_culture.shp", quiet = TRUE)
mpa %>% st_write("coastal_dashboard/data/mpa.shp")
mpa = st_read("coastal_dashboard/data/mpa.shp", quiet = TRUE)
coastal_features %>% st_write("coastal_dashboard/data/coastal_features.shp")
coastal_features =  st_read("coastal_dashboard/data/coastal_features.shp", quiet = TRUE)
coastal_features
coastal.only = coastal_features %>%
filter(class %in% c("Mangrove", "Salt marsh", "Tidal reef", "Salt pan", "Saline bare area", "Sand", "Seagrass", "Swamp") )
coastal.only
runApp('coastal_dashboard')
## ringnet fishery
ringnet = read_csv("coastal_dashboard/data/ringnet_cpue_all.csv") %>%
filter(between(lon,38, 42), between(lat, -13, -4))
runApp('coastal_dashboard')
getwd()
runApp('coastal_dashboard')
africa %>% st_write("data/africa.shp")
africa %>% st_write("coastal_dashboard/data/africa.shp")
## basemap
africa = st_read("data/africa.shp", quiet = TRUE)
sea.level
sea.level %>% write_csv("coastal_dashboard/data/zanzibar_monthly.txt")
runApp('coastal_dashboard')
runApp('coastal_dashboard')
shiny::runApp('coastal_dashboard')
112750/32
wior::get_meteo(coastal_codes = 1, begin_year = 2010, end_year = 2011)
aa = wior::get_meteo(coastal_codes = 1, begin_year = 2010, end_year = 2011)
aa
aa = wior::get_meteo(coastal_codes = 1, begin_year = 2021, end_year = 2021)
aa
require(tidyverse)
aa %>% tail()
aa = wior::get_meteo(coastal_codes = 1, begin_year = 1990, end_year = 2021)
aa
aa %>% glimpse()
aa %>% skimr::skim()
aa %>% file.size()
aa %>% object.size()
53323296 /1000000
aa
aa %>% write_csv("coastal_dashboard/data/meteo_zanzibar.csv")
